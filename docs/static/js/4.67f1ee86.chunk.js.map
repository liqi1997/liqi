{"version":3,"sources":["pages/Weather/index.module.css","components/Title/index.module.css","components/Title/index.jsx","pages/Weather/index.jsx","components/SvgIcon/index.jsx"],"names":["module","exports","Title","children","className","styles","title","Weather","useState","address","setAddress","live","setLive","foreCast","setForeCast","useEffect","fetch","then","res","json","url","Array","isArray","lives","length","forecasts","header","card","icon","SvgIcon","name","size","weather","content","location","province","city","temperature","humidity","winddirection","windpower","time","reporttime","table","row","colHeader","colSpan","casts","map","item","col","date","week","dayweather","daytemp","daywind","daypower","nightweather","nighttemp","nightwind","nightpower","aria-hidden","style","height","width","href"],"mappings":"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","file":"static/js/4.67f1ee86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Weather_header__1mw55\",\"select\":\"Weather_select__VNKEY\",\"table\":\"Weather_table__6imTK\",\"row\":\"Weather_row__3h1C8\",\"colHeader\":\"Weather_colHeader__1oQVO\",\"col\":\"Weather_col__1z8Pf\",\"card\":\"Weather_card__3f87N\",\"icon\":\"Weather_icon__2cf7M\",\"content\":\"Weather_content__al2jS\",\"title\":\"Weather_title__3WC6G\",\"location\":\"Weather_location__2sIRV\",\"time\":\"Weather_time__2LBPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2ntrx\"};","import styles from './index.module.css'\n\nfunction Title({ children }) {\n    return (\n        <div className={styles.title}>{children}</div>\n    )\n}\n\nexport default Title;","import { useEffect, useState } from \"react\";\nimport styles from './index.module.css'\nimport Title from '../../components/Title'\nimport SvgIcon from '../../components/SvgIcon'\n\nfunction Weather() {\n\n    const [address, setAddress] = useState({})\n    const [live, setLive] = useState({})\n    const [foreCast, setForeCast] = useState({})\n\n    // const [provinceList, setProvinceList] = useState([])\n    // const [province, setProvince] = useState(null)\n    // const [cityList, setCityList] = useState([])\n    // const [city, setCity] = useState(null)\n\n    // useEffect(() => {\n\n    //     fetch(`https://restapi.amap.com/v3/config/district?key=e282c61b5a5bde7d9a16cd9684eefd52`).then(res => res.json()).then(res => {\n    //         if (res && Array.isArray(res.districts) && res.districts.length > 0) {\n    //             const list = res.districts[0].districts;\n    //             if (Array.isArray(list)) {\n    //                 setProvinceList(list)\n    //             }\n    //         }\n    //     })\n\n    // }, []);\n\n    // useEffect(() => {\n    //     if (province) {\n\n    //         fetch(`https://restapi.amap.com/v3/config/district?key=e282c61b5a5bde7d9a16cd9684eefd52&keywords=${province}`).then(res => res.json()).then(res => {\n    //             if (res && Array.isArray(res.districts) && res.districts.length > 0) {\n    //                 const list = res.districts[0].districts;\n    //                 if (Array.isArray(list)) {\n    //                     setCityList(list)\n    //                 }\n    //             }\n    //         })\n\n    //     }\n    // }, [province]);\n\n\n    useEffect(() => {\n\n        fetch(`https://restapi.amap.com/v3/ip?key=e282c61b5a5bde7d9a16cd9684eefd52`).then(res => res.json()).then(res => {\n            setAddress(res)\n        })\n\n\n\n        let url = `https://restapi.amap.com/v3/weather/weatherInfo?key=e282c61b5a5bde7d9a16cd9684eefd52&city=320100&extensions=base`\n        fetch(url).then(res => res.json()).then(res => {\n            if (res && Array.isArray(res.lives) && res.lives.length > 0) {\n                setLive(res.lives[0])\n            }\n        })\n\n        url = `https://restapi.amap.com/v3/weather/weatherInfo?key=e282c61b5a5bde7d9a16cd9684eefd52&city=320100&extensions=all`\n        fetch(url).then(res => res.json()).then(res => {\n            if (res && Array.isArray(res.forecasts) && res.forecasts.length > 0) {\n                setForeCast(res.forecasts[0])\n            }\n        })\n\n\n    }, []);\n\n    // function onProvinceChange(e) {\n    //     setProvince(e.target.value)\n    // }\n\n\n\n    // function onCityChange(e) {\n    //     setCity(e.target.value)\n    // }\n\n    function renderWeek(week) {\n        if (week === '1') return '星期一'\n        if (week === '2') return '星期二'\n        if (week === '3') return '星期三'\n        if (week === '4') return '星期四'\n        if (week === '5') return '星期五'\n        if (week === '6') return '星期六'\n        if (week === '7') return '星期日'\n    }\n\n    return <div className='container'>\n\n        {/* <div className={styles.header}>\n\n            <select className={styles.select} placeholder='请选择省份' value={province} onChange={onProvinceChange}>\n                {provinceList.map(item => <option value={item.adcode} key={item.adcode}>{item.name}</option>)}\n            </select>\n\n            <select className={styles.select} placeholder='请选择城市' value={city} onChange={onCityChange}>\n                {cityList.map(item => <option value={item.adcode} key={item.adcode}>{item.name}</option>)}\n            </select>\n\n        </div> */}\n\n\n        <div className={styles.header}>\n            <Title>\n                实时天气\n        </Title>\n        </div>\n\n\n        <div className={styles.card}>\n            <div className={styles.icon}>\n                <SvgIcon name='#icon-5-xiaoshoukanban' size={48} />\n                <div>\n                    {live.weather}\n                </div>\n            </div>\n            <div className={styles.content}>\n\n                <div className={styles.title}>实时天气</div>\n                <div className={styles.location}>\n                    {address.province}{address.city}\n                </div>\n\n                <div className='between'>\n\n                    <div>\n                        温度 {live.temperature}°\n                </div>\n                    <div>\n                        湿度 {live.humidity}°\n                    </div>\n\n                </div>\n\n                <div className='between'>\n\n\n                    <div>\n                        风向 {live.winddirection}\n                    </div>\n                    <div>\n                        风力 {live.windpower}级\n                    </div>\n\n\n                </div>\n\n\n                <div className={styles.time}>\n                    发布时间：{live.reporttime}\n                </div>\n\n            </div>\n        </div>\n\n\n\n\n\n        <div className={styles.header}>\n            <Title>\n                天气预报\n        </Title>\n\n\n        </div>\n\n        <table className={styles.table}>\n            <tr className={styles.row}>\n                <th className={styles.colHeader}>日期</th>\n                <th className={styles.colHeader}>星期</th>\n                <th className={styles.colHeader} colSpan='4'>白天</th>\n                <th className={styles.colHeader} colSpan='4'>夜晚</th>\n            </tr>\n            {Array.isArray(foreCast.casts) && foreCast.casts.map(item => (<tr className={styles.row}>\n                <td className={styles.col}>\n                    {item.date}\n                </td>\n                <td className={styles.col}>\n                    {renderWeek(item.week)}\n                </td>\n                <td className={styles.col}>\n                    {item.dayweather}\n                </td>\n                <td className={styles.col}>\n                    {item.daytemp}度\n                    </td>\n                <td className={styles.col}>\n                    {item.daywind}风向\n                    </td>\n                <td className={styles.col}>\n                    {item.daypower}风力\n                    </td>\n\n                <td className={styles.col}>\n                    {item.nightweather}\n                </td>\n                <td className={styles.col}>\n                    {item.nighttemp}度\n                    </td>\n                <td className={styles.col}>\n                    {item.nightwind}风向\n                    </td>\n                <td className={styles.col}>\n                    {item.nightpower}风力\n                    </td>\n            </tr>))}\n        </table>\n\n        <div className={styles.time}>发布时间：{foreCast.reporttime}</div>\n\n\n\n    </div>\n}\n\nexport default Weather;","\nfunction SvgIcon({ name = '', size = 40 }) {\n    return <svg aria-hidden='true' style={{ height: size, width: size, }}>\n        <use href={name} ></use>\n    </svg>\n}\n\nexport default SvgIcon;"],"sourceRoot":""}